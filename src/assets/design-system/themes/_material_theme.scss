// USE SAME COLORS OF tailwind.config.js

// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming
@use "@angular/material" as mat;

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
// Change here if you want custom font
//@debug #{$font-family};

$custom-typography: mat.define-typography-config(
  $font-family: $font-family,
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$primary: mat.define-palette($primary-palette);
$secondary: mat.define-palette($secondary-palette);

// The "warn" palette is optional and defaults to red if not specified.
$warn: mat.define-palette(mat.$red-palette);

// Create the theme object (a Sass map containing all of the palettes).
$theme: mat.define-light-theme(
  (
    color: (
      primary: $primary,
      accent: $secondary,
      warn: $warn,
    ),
    typography: $custom-typography,
    density: 0,
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// Emit theme-dependent styles for common features used across multiple components.
@include mat.all-component-themes($theme);
